======================
Using ``add_integer``
-------------------
This is an example text file in reStructuredText format.  First import
``add_integer`` from the ``0-add_integer`` module:

>>> add_integer = __import__('0-add_integer').add_integer

# Simple addition
>>> add_integer(1, 2)
3

# addition between positive and negative
>>> add_integer(100, -2)
98

# addition with only one parameter
>>> add_integer(2)
100

# addition between floats
>>> add_integer(2.3, 2.4)
4

# failed case giving a string in first parameter
>>> add_integer("a", 34)
Traceback (most recent call last):
	...
TypeError: a must be an integer

# failed case giving a string in second parameter
>>> add_integer(23, "b")
Traceback (most recent call last):
	...
TypeError: b must be an integer

# failed case giving nothing
>>> add_integer()
Traceback (most recent call last):
	...
TypeError: add_integer() missing 1 required positional argument: 'a'

#adding very big numbas
>>> add_integer(10000000000, 10)
10000000010

#case failed mega float dabb on them
>>> add_integer(float('inf'))
Traceback (most recent call last):
	...
OverflowError: cannot convert float infinity to integer

# CASe of nan float
>>> add_integer(float('nan'))
Traceback (most recent call last):
	...
ValueError: cannot convert float NaN to integer
